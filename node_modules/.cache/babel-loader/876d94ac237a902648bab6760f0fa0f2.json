{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cshan\\\\Box Sync\\\\website\\\\satisfactory2\\\\src\\\\components\\\\conveyer.js\";\nimport React from 'react';\nimport '../css/conveyer.css';\n\nclass Conveyer extends React.Component {\n  constructor(props) {\n    super(props);\n  } // _handleClick(e) {\n  //     this.props._handleClick;\n  // }\n\n\n  render() {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = this.props;\n    let angle = Math.atan((y2 - y1) / (x2 - x1));\n    let arrx1 = x1 + Math.round(Math.cos(angle - Math.PI / 4) * 10);\n    let arry1 = y1 + Math.round(Math.sin(angle - Math.PI / 4) * 10);\n    let arrx2 = x2 + Math.round(Math.cos(angle + Math.PI / 4) * 10);\n    let arry2 = y2 + Math.round(Math.sin(angle + Math.PI / 4) * 10);\n    console.log(arrx1);\n    console.log(arrx2);\n    console.log(arry1);\n    console.log(arry2);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"polygon\", {\n      points: \"\" + x2 + \",\" + y2 + \" \" + arrx1 + \",\" + arry1 // \" \" + arrx2 + \",\" + arry2\n      ,\n      className: \"conveyer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"line\", {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      className: \"conveyer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }));\n  }\n\n} //   return <div onMouseMove={this._onMouseMove.bind(this)}>\n//         <h1>Mouse coordinates: { x } { y }</h1>\n//       </div>;\n// function Machine() {\n//   _onMouseMove\n//   return (\n//     <circle cx=\"100\" cy=\"100\" r=\"40\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\n//   );\n// }\n\n\nexport default Conveyer;","map":{"version":3,"sources":["C:/Users/cshan/Box Sync/website/satisfactory2/src/components/conveyer.js"],"names":["React","Conveyer","Component","constructor","props","render","x1","y1","x2","y2","angle","Math","atan","arrx1","round","cos","PI","arry1","sin","arrx2","arry2","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;;AAIA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD,GAHkC,CAKnC;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,EAAN;AAAUC,MAAAA,EAAV;AAAcC,MAAAA;AAAd,QAAqB,KAAKL,KAAhC;AACA,QAAIM,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACH,EAAE,GAACF,EAAJ,KAAWC,EAAE,GAACF,EAAd,CAAV,CAAZ;AACA,QAAIO,KAAK,GAAGP,EAAE,GAAGK,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,GAAL,CAASL,KAAK,GAACC,IAAI,CAACK,EAAL,GAAQ,CAAvB,IAA4B,EAAvC,CAAjB;AACA,QAAIC,KAAK,GAAGV,EAAE,GAAGI,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACO,GAAL,CAASR,KAAK,GAACC,IAAI,CAACK,EAAL,GAAQ,CAAvB,IAA4B,EAAvC,CAAjB;AACA,QAAIG,KAAK,GAAGX,EAAE,GAAGG,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,GAAL,CAASL,KAAK,GAACC,IAAI,CAACK,EAAL,GAAQ,CAAvB,IAA4B,EAAvC,CAAjB;AACA,QAAII,KAAK,GAAGX,EAAE,GAAGE,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACO,GAAL,CAASR,KAAK,GAACC,IAAI,CAACK,EAAL,GAAQ,CAAvB,IAA4B,EAAvC,CAAjB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,wBACE,uDACE;AAAS,MAAA,MAAM,EACG,KAAKZ,EAAL,GAAU,GAAV,GAAgBC,EAAhB,GACA,GADA,GACMI,KADN,GACc,GADd,GACoBI,KAFvB,CAGG;AAHlB;AAKS,MAAA,SAAS,EAAC,UALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AAAM,MAAA,EAAE,EAAEX,EAAV;AAAc,MAAA,EAAE,EAAEC,EAAlB;AAAsB,MAAA,EAAE,EAAEC,EAA1B;AAA8B,MAAA,EAAE,EAAEC,EAAlC;AAAsC,MAAA,SAAS,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAYD;;AAhCkC,C,CAoCvC;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeR,QAAf","sourcesContent":["import React from 'react';\r\nimport '../css/conveyer.css'\r\n\r\n\r\n\r\nclass Conveyer extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n\r\n    // _handleClick(e) {\r\n    //     this.props._handleClick;\r\n    // }\r\n  \r\n    render() {\r\n      const { x1, y1, x2, y2 } = this.props;\r\n      let angle = Math.atan((y2-y1) / (x2-x1))\r\n      let arrx1 = x1 + Math.round(Math.cos(angle-Math.PI/4) * 10)\r\n      let arry1 = y1 + Math.round(Math.sin(angle-Math.PI/4) * 10)\r\n      let arrx2 = x2 + Math.round(Math.cos(angle+Math.PI/4) * 10)\r\n      let arry2 = y2 + Math.round(Math.sin(angle+Math.PI/4) * 10)\r\n      console.log(arrx1)\r\n      console.log(arrx2)\r\n      console.log(arry1)\r\n      console.log(arry2)\r\n      return(\r\n        <>\r\n          <polygon points={\r\n                            \"\" + x2 + \",\" + y2 + \r\n                            \" \" + arrx1 + \",\" + arry1 \r\n                            // \" \" + arrx2 + \",\" + arry2\r\n                          } \r\n                   className=\"conveyer\"/>\r\n          <line x1={x1} y1={y1} x2={x2} y2={y2} className=\"conveyer\"/>\r\n        </>\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n\r\n//   return <div onMouseMove={this._onMouseMove.bind(this)}>\r\n//         <h1>Mouse coordinates: { x } { y }</h1>\r\n//       </div>;\r\n\r\n// function Machine() {\r\n\r\n//   _onMouseMove\r\n\r\n//   return (\r\n//     <circle cx=\"100\" cy=\"100\" r=\"40\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\r\n//   );\r\n// }\r\n\r\nexport default Conveyer;\r\n"]},"metadata":{},"sourceType":"module"}