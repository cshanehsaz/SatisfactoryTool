{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\cshan\\\\Box Sync\\\\website\\\\satisfactory2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\cshan\\\\Box Sync\\\\website\\\\satisfactory2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\cshan\\\\Box Sync\\\\website\\\\satisfactory2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\cshan\\\\Box Sync\\\\website\\\\satisfactory2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\cshan\\\\Box Sync\\\\website\\\\satisfactory2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\cshan\\\\Box Sync\\\\website\\\\satisfactory2\\\\src\\\\components\\\\canvas.js\";\nimport React from 'react';\nimport Machine from './machine.js';\nimport Conveyer from './conveyer.js';\nimport MachineCursor from './machineCursor.js';\nimport MachineName from './machineName.js';\nimport '../css/canvas.css';\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Canvas, _React$Component);\n\n  function Canvas(props) {\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Canvas).call(this, props));\n    _this.state = {\n      x: 0,\n      y: 0,\n      nodes: [],\n      conveyers: [],\n      currentTarget: {},\n      selector: false\n    };\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"handleMachineClick\",\n    value: function handleMachineClick(e) {\n      //conveyer connector tool\n      e.stopPropagation();\n\n      if (!this.state.selector) {\n        this.setState({\n          currentTarget: {\n            x1: e.target.getAttribute(\"cx\"),\n            y1: e.target.getAttribute(\"cy\")\n          },\n          selector: true\n        });\n      } else {\n        var _conveyers = this.state.conveyers;\n\n        _conveyers.push({\n          x1: this.state.currentTarget.x1,\n          y1: this.state.currentTarget.y1,\n          x2: e.target.getAttribute(\"cx\"),\n          y2: e.target.getAttribute(\"cy\")\n        });\n\n        this.setState({\n          conveyers: _conveyers,\n          currentTarget: {},\n          selector: false\n        });\n      }\n    }\n  }, {\n    key: \"_onMouseMove\",\n    value: function _onMouseMove(e) {\n      var rect = e.target.getBoundingClientRect();\n      this.setState({\n        x: e.screenX - rect.x,\n        y: e.screenY - rect.y - rect.top + 50\n      }); //50 to fix the bugs with cursors\n    }\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(e) {\n      //at some point make this so that it's not redrawing all of them every frame, just stamps somewhere more permanent instead\n      var _nodes = this.state.nodes;\n\n      _nodes.push({\n        x: this.state.x,\n        y: this.state.y,\n        name: this.props.tool\n      });\n\n      this.setState({\n        nodes: _nodes\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          x = _this$state.x,\n          y = _this$state.y;\n      return React.createElement(\"div\", {\n        onMouseMove: this._onMouseMove.bind(this),\n        onClick: this._onClick.bind(this),\n        className: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        width: \"100%\",\n        height: \"100%\",\n        className: this.state.selector ? \"canvas-selector\" : \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.nodes.map(function (coordinate) {\n        return React.createElement(Machine, {\n          onClick: _this2.handleMachineClick.bind(_this2),\n          x: coordinate.x,\n          y: coordinate.y,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }), this.state.nodes.map(function (coordinate) {\n        return React.createElement(MachineName, {\n          name: coordinate.name,\n          x: coordinate.x,\n          y: coordinate.y,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      }), this.state.conveyers.map(function (coors) {\n        return React.createElement(Conveyer, {\n          x1: coors.x1,\n          y1: coors.y1,\n          x2: coors.x2,\n          y2: coors.y2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      }), React.createElement(MachineCursor, {\n        x: x,\n        y: y,\n        onMouseMove: this._onMouseMove.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Canvas;\n}(React.Component);\n\nexport default Canvas; // this.state.selector ? {cursor: \"pointer\"} : {cursor: \"auto\"}","map":{"version":3,"sources":["C:\\Users\\cshan\\Box Sync\\website\\satisfactory2\\src\\components\\canvas.js"],"names":["React","Machine","Conveyer","MachineCursor","MachineName","Canvas","props","state","x","y","nodes","conveyers","currentTarget","selector","e","stopPropagation","setState","x1","target","getAttribute","y1","_conveyers","push","x2","y2","rect","getBoundingClientRect","screenX","screenY","top","_nodes","name","tool","console","log","_onMouseMove","bind","_onClick","map","coordinate","handleMachineClick","coors","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Machine from './machine.js'\r\nimport Conveyer from './conveyer.js'\r\nimport MachineCursor from './machineCursor.js'\r\nimport MachineName from './machineName.js'\r\nimport '../css/canvas.css'\r\n\r\n\r\n\r\nclass Canvas extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n        x: 0, \r\n        y: 0, \r\n        nodes: [],\r\n        conveyers: [],\r\n        currentTarget: {},\r\n        selector: false,\r\n      };\r\n\r\n    }\r\n\r\n    handleMachineClick(e) { //conveyer connector tool\r\n      e.stopPropagation()\r\n\r\n      if(!this.state.selector) {\r\n        this.setState({\r\n          currentTarget: {x1: e.target.getAttribute(\"cx\"), y1: e.target.getAttribute(\"cy\")},\r\n          selector: true\r\n        })\r\n      }\r\n\r\n      else {\r\n        let _conveyers = this.state.conveyers;\r\n        _conveyers.push({x1: this.state.currentTarget.x1, y1: this.state.currentTarget.y1, x2: e.target.getAttribute(\"cx\"), y2: e.target.getAttribute(\"cy\")});\r\n        this.setState({\r\n          conveyers: _conveyers,\r\n          currentTarget: {},\r\n          selector: false\r\n        })\r\n      }\r\n      \r\n    }\r\n\r\n\r\n    _onMouseMove(e) {\r\n      let rect = e.target.getBoundingClientRect()\r\n      this.setState({ x: e.screenX - rect.x, y: e.screenY - rect.y - rect.top + 50}); //50 to fix the bugs with cursors\r\n    }\r\n\r\n    _onClick(e) { //at some point make this so that it's not redrawing all of them every frame, just stamps somewhere more permanent instead\r\n      let _nodes = this.state.nodes;\r\n      _nodes.push({x: this.state.x, y: this.state.y, name: this.props.tool});\r\n      this.setState({nodes: _nodes});\r\n      console.log(this.state);\r\n    }\r\n  \r\n    render() {\r\n      const { x, y } = this.state;\r\n        return(\r\n          <div onMouseMove={this._onMouseMove.bind(this)} onClick={this._onClick.bind(this)} className=\"canvas\">\r\n            <svg width=\"100%\" height=\"100%\" className={this.state.selector ? \"canvas-selector\" : \"canvas\"}>\r\n              {/* maps all machines, machine names, and conveyers */}\r\n              {this.state.nodes.map(coordinate => <Machine onClick={this.handleMachineClick.bind(this)} x={coordinate.x} y={coordinate.y}/>)}\r\n              {this.state.nodes.map(coordinate => <MachineName name={coordinate.name} x={coordinate.x} y={coordinate.y}/>)}\r\n              {this.state.conveyers.map(coors => <Conveyer x1={coors.x1} y1={coors.y1} x2={coors.x2} y2={coors.y2} />)} \r\n              <MachineCursor x={x} y={y} onMouseMove={this._onMouseMove.bind(this)}/>\r\n            </svg>\r\n          </div>\r\n          )\r\n    }\r\n  }\r\n\r\nexport default Canvas;\r\n\r\n\r\n// this.state.selector ? {cursor: \"pointer\"} : {cursor: \"auto\"}"]},"metadata":{},"sourceType":"module"}